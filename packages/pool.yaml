sensor:
  - platform: template
    sensors:
      auto_cycle_duration_abacus:
        friendly_name: 'auto cycle duration (abacus)'
        value_template: >

            {% if (states('sensor.pool_water_kalman')  |float(20))< 1 %} 
                 24
            {% elif (states('sensor.pool_water_kalman')  |float(20))< 9 %}
                 {{
                 states('input_number.ratio_abacus')|float(1)|round(1,"ceil", 2)/100*3
                 }}
            {% elif (states('sensor.pool_water_kalman')  |float(20))<= 32 %}
                 {{ 
                 min([24,(
                 0.00335*(states('sensor.pool_water_kalman') | float(20))**3 
                 - 0.14953*(states('sensor.pool_water_kalman') | float(20))**2  
                 + 2.43489*(states('sensor.pool_water_kalman') | float(20)) 
                 - 9.72859)*(states('input_number.ratio_abacus') | float(1) /100
                 )])|round(2,"ceil", 2)
                 }}
            {% elif (states('sensor.pool_water_kalman')  |float(20))> 32 %}
                 24
            {% else %}
                 failed
             {% endif %}
        icon_template: mdi:chart-bell-curve
        unit_of_measurement: 'hours'
        
        
      auto_cycle_duration_std:
        friendly_name: 'auto cycle duration (standard)'
        value_template: >
            {% if (states('sensor.pool_water_kalman')  |float(20))< -1 %} 
                 24
            {% elif (states('sensor.pool_water_kalman')  |float(20))< 1 %}
                 {{ (states('sensor.pool_water_kalman') | float(20) * -10.5 + 13 )|round(1) }}
            {% elif (states('sensor.pool_water_kalman')  |float(20))< 9 %}
                 3
            {% elif (states('sensor.pool_water_kalman')  |float(20))< 10 %}
                 {{ (states('sensor.pool_water_kalman') | float(20) * 2 - 15 )|round(1) }}
            {% elif (states('sensor.pool_water_kalman')  |float(20))< 27 %}
                 {{ (states('sensor.pool_water_kalman') | float(20) * 0.529 - 0.232 )|round(1) }}
            {% elif (states('sensor.pool_water_kalman')  |float(20))< 31 %}
                 {{ (states('sensor.pool_water_kalman') | float(20) * 1.5 - 26.5 )|round(1) }}
            {% elif (states('sensor.pool_water_kalman')  |float(20))< 32 %}
                 {{ (states('sensor.pool_water_kalman') | float(20) * 4 - 104 )|round(1) }}
            {% elif (states('sensor.pool_water_kalman')  |float(20))> 32 %}
                 24
            {% else %}
                 failed
             {% endif %}
        icon_template: mdi:water-sync
        unit_of_measurement: 'hours'

  - platform: history_stats
    name: pompe_piscine_on_today
    entity_id: switch.tz3000_pompe_piscine
    state: 'on'
    type: time
    start: '{{ now().replace(hour=0, minute=0, second=0) }}'
    end: '{{ now() }}'
    
  - platform: template
    sensors:
      last_autostart_triggered_since:
        friendly_name: 'duration since last autofiltration was triggered'
        value_template: >
         {{ (( now().timestamp() - as_timestamp(state_attr('automation.pool_filtration_cycle_start','last_triggered')) ) / 3600 )
           | round(2) }}
        icon_template: mdi:chart-areaspline-variant
        unit_of_measurement: 'hours'


input_boolean:
  manual_filtration:
    name: Manual mode
  auto_filtration:
    name: Pool Filtration based on temperature


input_datetime:
  pump_manual_start:
    name: manual start time
    has_date: false
    has_time: true
  pump_auto_start:
    name: auto start time
    has_date: false
    has_time: true

    
input_number:
  manual_duration:
    name: manual cycle duration
    icon: mdi:water-sync
    #initial: 4
    min: 0
    max: 24
    step: 0.5

    
  ratio_abacus:
    name: ratio abacus
    icon: mdi:percent
    #initial: 100
    min: 1
    max: 200
    step: 1
    mode: box
    
input_select:
  f_mode:
    name: pool filtration mode
    options:
      - manual
      - standard
      - abacus 
    #initial: abacus
    icon: mdi:dip-switch    

automation:

 -  alias: '[Pool] filtration cycle start'
    description: ''
    trigger:
      - platform: time
        at: input_datetime.pump_auto_start
    condition:
      - condition: state
        entity_id: input_boolean.auto_filtration
        state: 'on'
    action:
      - service: switch.turn_on
        target:
          entity_id: switch.tz3000_pompe_piscine
    mode: single
    
 -  alias: '[Pool] auto filtration cycle stop (abacus)'
    description: ''
    trigger:
      - platform: numeric_state
        entity_id: sensor.pompe_piscine_on_today
        above: sensor.auto_cycle_duration_abacus
      - platform: numeric_state
        entity_id: sensor.last_autostart_triggered_since
        above: sensor.auto_cycle_duration_abacus
    condition:
      - condition: state
        entity_id: input_boolean.auto_filtration
        state: 'on'
      - condition: state
        entity_id: input_select.f_mode
        state: abacus
    action:
      - service: switch.turn_off
        target:
          entity_id: switch.tz3000_pompe_piscine
      - service: notify.persistent_notification
        data:
          message: pump stopped by abacus mode
    mode: single 
    
 -  alias: '[Pool] auto filtration cycle stop (standard )'
    description: ''
    trigger:
      - platform: numeric_state
        entity_id: sensor.pompe_piscine_on_today
        above: sensor.auto_cycle_duration_std
      - platform: numeric_state
        entity_id: sensor.last_autostart_triggered_since
        above: sensor.auto_cycle_duration_std      
    condition:
      - condition: state
        entity_id: input_boolean.auto_filtration
        state: 'on'
      - condition: state
        entity_id: input_select.f_mode
        state: standard
    action:
      - service: switch.turn_off
        target:
          entity_id: switch.tz3000_pompe_piscine
    mode: single
    

 -  alias: '[Pool] manual filtration cycle start'
    description: ''
    trigger:
      - platform: time
        at: input_datetime.pump_manual_start
    condition:
      - condition: state
        entity_id: input_boolean.auto_filtration
        state: 'on'
      - condition: state
        entity_id: input_select.f_mode
        state: manual
    action:
      - service: switch.turn_on
        target:
          entity_id: switch.tz3000_pompe_piscine
    mode: single



 -  alias: '[Pool] manual filtration cycle stop'
    description: ''
    trigger:
      - platform: numeric_state
        entity_id: sensor.pompe_piscine_on_today
        above: input_number.manual_duration
    condition:
      - condition: state
        entity_id: input_boolean.auto_filtration
        state: 'on'
      - condition: state
        entity_id: input_select.f_mode
        state: manual
    action:
      - service: switch.turn_off
        target:
          entity_id: switch.tz3000_pompe_piscine
    mode: single
