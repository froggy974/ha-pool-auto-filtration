sensor:
# if you use 2 temperatures sensors, you can uncomment the part below to make a average sensor temperature
#  - platform: template
#    sensors:
#      pool_water_temp_avg:
#        friendly_name: "pool water"
#        unique_id: sensor.pool_water_temp_avg
#        unit_of_measurement: "Â°C"
#        icon_template: mdi:coolant-temperature
#        value_template: >
#          {{ ((float(states('sensor.pool_water_temp')) 
#          + float(states('sensor.pool_water_temp_2'))) / 2) | round(1, default=0)
#          }}

  - platform: template
    sensors:
      auto_cycle_duration:
        friendly_name: 'auto cycle duration'
        value_template: >
            {% if (states('sensor.pool_water_temp_avg')  |float(20))< -1 %} 
                 24
            {% elif (states('sensor.pool_water_temp_avg')  |float(20))< 1 %}
                 {{ (states('sensor.pool_water_temp_avg') | float(20) * -10.5 + 13 )|round(1) }}
            {% elif (states('sensor.pool_water_temp_avg')  |float(20))< 9 %}
                 3
            {% elif (states('sensor.pool_water_temp_avg')  |float(20))< 10 %}
                 {{ (states('sensor.pool_water_temp_avg') | float(20) * 2 - 15 )|round(1) }}
            {% elif (states('sensor.pool_water_temp_avg')  |float(20))< 27 %}
                 {{ (states('sensor.pool_water_temp_avg') | float(20) * 0.529 - 0.232 )|round(1) }}
            {% elif (states('sensor.pool_water_temp_avg')  |float(20))< 31 %}
                 {{ (states('sensor.pool_water_temp_avg') | float(20) * 1.5 - 26.5 )|round(1) }}
            {% elif (states('sensor.pool_water_temp_avg')  |float(20))< 32 %}
                 {{ (states('sensor.pool_water_temp_avg') | float(20) * 4 - 104 )|round(1) }}
            {% elif (states('sensor.pool_water_temp_avg')  |float(20))> 32 %}
                 24
            {% else %}
                 failed
             {% endif %}
        icon_template: mdi:water-sync
        unit_of_measurement: 'hours'
        # icon_template: >-
        #   {% if states('sensor.pool_water_temp_avg')|int < 8 %}
        #     mdi:weather-snowy
        #   {% elif states('sensor.auto_cycle_duration')|int >= 8 %}
        #     mdi:numeric-{{ states('sensor.auto_cycle_duration')|int }}-box-multiple-outline
        #   {% else %}
        #     mdi:weather-sunny
        #   {% endif %}
   
  - platform: statistics
    name: "pool water temp avg"
    entity_id: sensor.pool_water_temp_avg
    state_characteristic: mean
    max_age:
      hours: 24     
        
  - platform: history_stats
    name: pompe_piscine_on_today
    entity_id: switch.tz3000_pompe_piscine
    state: 'on'
    type: time
    start: '{{ now().replace(hour=0, minute=0, second=0) }}'
    end: '{{ now() }}'


input_boolean:
  manual_filtration:
    name: Manual mode
  auto_filtration:
    name: Automatic mode


input_datetime:
  pump_manual_start:
    name: manual start time
    has_date: false
    has_time: true
  pump_auto_start:
    name: auto start time
    has_date: false
    has_time: true

    
input_number:
  manual_duration:
    name: manual cycle duration
    icon: mdi:water-sync
    initial: 4
    min: 0
    max: 24
    step: 0.5
  

automation:
 -  alias: '[Pool] manual filtration cycle start'
    description: ''
    trigger:
      - platform: time
        at: input_datetime.pump_manual_start
    condition:
      - condition: state
        entity_id: input_boolean.manual_filtration
        state: 'on'
    action:
      - service: switch.turn_on
        target:
          entity_id: switch.tz3000_pompe_piscine
    mode: single
    
 -  alias: '[Pool] manual filtration cycle stop'
    description: ''
    trigger:
      - platform: numeric_state
        entity_id: sensor.pompe_piscine_on_today
        above: input_number.manual_duration
    condition:
      - condition: state
        entity_id: input_boolean.manual_filtration
        state: 'on'
    
    action:
      - service: switch.turn_off
        target:
          entity_id: switch.tz3000_pompe_piscine
    mode: single
    
 -  alias: '[Pool] auto filtration cycle start'
    description: ''
    trigger:
      - platform: time
        at: input_datetime.pump_auto_start
    condition:
      - condition: state
        entity_id: input_boolean.auto_filtration
        state: 'on'
    action:
      - service: switch.turn_on
        target:
          entity_id: switch.tz3000_pompe_piscine
    mode: single
    
 -  alias: '[Pool] auto filtration cycle stop'
    description: ''
    trigger:
      - platform: numeric_state
        entity_id: sensor.pompe_piscine_on_today
        above: sensor.auto_cycle_duration
    action:
      - service: switch.turn_off
        target:
          entity_id: switch.tz3000_pompe_piscine
    mode: single
