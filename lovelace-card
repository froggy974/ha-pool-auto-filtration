type: grid
cards:
  - type: markdown
    content: ' '
    title: 'Pool filtration scheduling :'
  - type: entities
    entities:
      - entity: input_boolean.manual_filtration
    show_header_toggle: false
  - type: conditional
    conditions:
      - entity: input_boolean.manual_filtration
        state: 'on'
    card:
      type: vertical-stack
      cards:
        - type: entities
          entities:
            - entity: input_datetime.pump_manual_start
            - entity: input_number.manual_duration
          show_header_toggle: false
        - type: markdown
          content: >-
            **Last manual filtration started at :**

            {{
            (as_timestamp(states.automation.pool_manual_filtration_cycle_start.attributes.last_triggered))
            | timestamp_custom('%B %-d, %H:%M', True) }}


            {% if
            as_timestamp(strptime((states('input_datetime.pump_manual_stop')),
            '%Y, %m, %d, %H, %M, %S')) > as_timestamp(now()) %}
              **end of filtration manual filtration planned at :**
            {{ (as_timestamp(states('input_datetime.pump_manual_stop'))) |
            timestamp_custom('%B %-d, %H:%M', True) }}

            {% else %}
              *Manual stop Not set*
            {% endif %}
  - type: entities
    entities:
      - entity: input_boolean.auto_filtration
    show_header_toggle: false
  - type: conditional
    conditions:
      - entity: input_boolean.auto_filtration
        state: 'on'
    card:
      type: vertical-stack
      cards:
        - type: entities
          entities:
            - entity: input_datetime.pump_auto_start
            - entity: sensor.auto_cycle_duration
          show_header_toggle: false
        - type: markdown
          content: >
            **Last auto filtration started at :**

            {{
            (as_timestamp(states.automation.pool_auto_filtration_cycle_start.attributes.last_triggered))
            | timestamp_custom('%B %-d, %H:%M', True) }}


            {% if
            as_timestamp(strptime((states('input_datetime.pump_auto_stop')),
            '%Y, %m, %d, %H, %M, %S')) > as_timestamp(now()) %}
              **end of filtration planned at:**
             {{ (as_timestamp(states('input_datetime.pump_auto_stop'))) | timestamp_custom('%B %-d, %H:%M', True) }}
            {%elif states('sensor.auto_cycle_duration')|int == 24  %}
               **continuous filtration** ( 24/24)
            {% else %}
              *{{state_attr('input_datetime.pump_auto_stop', 'friendly_name')}}  is not set yet 
            (probably because start time is in the future)*

            {% endif %}
          title: 'Auto filtration status :'
  - type: history-graph
    entities:
      - entity: switch.pool_pump
    hours_to_show: 48
    refresh_interval: 0
    title: Pompe piscine
  - type: entities
    entities:
      - entity: sensor.pool_temp
      - entity: switch.pool_pump
    state_color: false
square: false
columns: 1
